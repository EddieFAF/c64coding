<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">

<!--
TODO
Macro-call,
Parameters for macros/pseudofunction/functions
All op-code-constants
More...
-->
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>.asm</string>
		<string>.s</string>
		<string>.a</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\/\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\/|^\s*\}</string>
	<key>name</key>
	<string>AcmeAssembler (C64)</string>
	<key>patterns</key>
	<array>


		<dict>
			<key>match</key>
			<string>^((([A-Za-z_][A-Za-z0-9_]*)+))</string>
			<key>name</key>
			<string>label</string>
		</dict>

<!-- Assembler syntaxes  -->

	<dict>
			<key>match</key>
			<string>\b(adc|and|asl|bit|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|sbc|sec|sed|sei|sta|stx|sty|tax|txa|tay|tya|tsx|txs)\b</string>
			<key>name</key>
			<string>keyword</string>
		</dict>

		<dict>
			<key>match</key>
			<string>\b(aac|aax|alr|anc|ane|arr|aso|asr|atx|axa|axs|dcm|dcp|dop|hlt|ins|isb|isc|jam|kil|lae|lar|las|lax|lse|lxa|oal|rla|rra|sax|sbx|skb|sha|shs|say|shx|shy|slo|skw|sre|sxa|sya|tas|top|xaa|xas)\b</string>
			<key>name</key>
			<string>illegal</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(bcc|bcs|beq|bmi|bne|bpl|brk|bvc|bvs|jmp|jsr|rti|rts)\b</string>
			<key>name</key>
			<string>keyword</string>
		</dict>

		<dict>
			<key>begin</key>
			<string>(\/\*).*</string>
			<key>end</key>
			
			<string>.*(\*\/)</string>
			<key>name</key>
			<string>comment.block</string>
		</dict>

<!-- " ; "  Comment -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(;).*$</string>
			<key>name</key>
			<string>comment.line.double-dash</string>
		</dict>



<!-- Storage types "! + ." -->
 		
 		<dict>
			<key>match</key>
			<string>(\.(8|08|wo|word|by|byte|tx|text|dword))\b</string> <!-- TODO: Mathc optional la el at beginning instead of just .* -->
			<key>name</key>
			<string>storage.type</string>
		</dict>

		<dict>
			<key>match</key>
			<string>(\!(8|08|wo|word|by|byte|tx|text|dword|16|24|32))\b</string> <!-- TODO: Mathc optional la el at beginning instead of just .* -->
			<key>name</key>
			<string>storage.type</string>
		</dict>


<!--   -->

		<dict>
			<key>match</key>
			<string>(\!(fill|fi|convtab|ct|pet|raw|scr|scrxor|to|source|src|binary|bin|sl|zone|zn|if|ifdef|for|set|do|endoffile|eof|macro|initmem|pseudopc|align|cpu|al|as|rl|rs|warn|error|serious))\b</string> <!-- TODO: Mathc optional la el at beginning instead of just .* -->
			<key>name</key>
			<string>support.function</string>
		</dict>


<!--   -->

		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(BLACK|WHITE|RED|CYAN|PURPLE|GREEN|BLUE|YELLOW|ORANGE|BROWN|LIGHT_RED|DARK_GRAY|GRAY|LIGHT_GREEN|LIGHT_BLUE|LIGHT_GRAY)\b</string>
			<key>name</key>
			<string>constant.language.color</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(LDA_IMM|LDA_ZP|LDA_ZPX|LDX_ZPY|LDA_IZPX|LDA_IZPY|LDA_ABS|LDA_ABSX|LDA_ABSY|JMP_IND|BNE_REL|RTS)\b</string>
			<key>name</key>
			<string>constant.language.opcodes</string>
		</dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>=\s*(list|List)\(\s*(\d+)*\s*\)</string>
			<key>name</key>
			<string>list</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.for</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.for</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*\.\b(for)\s*\((var)\b</string>
			<key>name</key>
			<string>for</string>
		</dict>
		<!--
		<dict>
			<key>match</key>
			<string></string>
			<key>name</key>
			<string>keyword.operator</string>
		</dict>
		-->
		<dict>
			<key>match</key>
			<string>^\s*\.\b(if)\b|\b(else)\b</string>
			<key>name</key>
			<string>keyword.control</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.untitled</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.untitled</string>
				</dict>
			</array>
		</dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.label.identifier</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*((\.function)\s*([A-Za-z_][A-Za-z0-9_]*))\b</string>
			<key>name</key>
			<string>function</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.macro.identifier</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.macro</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.macro</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*((\.macro)\s*([A-Za-z_][A-Za-z0-9_]*))\b</string>
			<key>name</key>
			<string>macro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#?\$[0-9a-fA-F]+</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\#[0-9a-fA-F]+\b</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d+\b</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\#%[0-1]+\b</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.assembly.acmeassembler</string>
	<key>uuid</key>
	<string>107f6c61-6808-4778-893e-8fb1cbb81f30</string>
</dict>
</plist>