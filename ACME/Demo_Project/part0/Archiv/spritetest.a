;***********************************************************************
;**  Project Name: Loader                                             **
;**  ---------------------------------------------------------------  **
;**  Filename: loader.a                                               **
;**  ---------------------------------------------------------------  **
;**  Author (c): Eddie                                                **
;**  File Date: 2018-02-28                                            **
;***********************************************************************


!src "../macros.a" ; Stellt ein paar Macros bereit
!src "../variables.a" ; Sprungziele

;my Routine, that starts with a nice BASIC line
!macro der_text {
  !pet "faf world domination"
}
year = 1971
!src "../basicstart_template.a"

        jmp start

!src "../subroutines.a"

        
sprite_init:        
; ********************************
; ** Spritedaten initialisieren ** 
; ********************************
		ldx #0 
-   	lda sprite_data,X 
 		sta $0340,X 
 		inx 
 		cpx #63 
        bne -
        rts
        
sprite_set:
; ********************************
; ** Sprites einrichten         **
; ********************************
        lda #%11111111          ; Sprite 0+1 aktivieren
        sta SPRITEACTIV
        ldx #$01
        stx SPRITE0COLOR        ; Farbe Sprite 0
        stx SPRITE1COLOR        ; Farbe Sprite 1
        stx SPRITE2COLOR        ; Farbe Sprite 2
        stx SPRITE3COLOR
        stx SPRITE4COLOR
        stx SPRITE5COLOR
        stx SPRITE6COLOR
        stx SPRITE7COLOR
        
        lda #$0D
        sta $07f8               ; Sprite 0
        sta $07f9               ; Sprite 1
        sta $07fa               ; Sprite 2
        sta $07fb
        sta $07fc
        sta $07fd
        sta $07fe
        sta $07ff
        ldx #$00
-       lda spr_pos,x
        sta SPRITE0X,x
        inx
        cpx #$10
        bne -
        lda #%00000000
        sta SPRITEDOUBLEWIDTH
        lda #%00000000
        sta $d010
        rts

spr_pos !byte 158, 130        
        !byte 158, 130        
        !byte 158, 130
        !byte 158, 130

        !byte 182, 130
        !byte 182, 130
        !byte 182, 130
        !byte 182, 130
        
sprite_space:
; **********************
; ** Warten auf Space
; **********************
        lda #$7f       ; detect space bar
        sta $dc00
        lda $dc01
        and #$10
        bne +
        jmp sprite_move        
+       rts

sprite_move:
        ldx SPRITE4X
        inx
        stx SPRITE4X
        cpx #$00
        bne +
        lda $d010
        ora #%10010000
        sta $d010
+       ldx SPRITE0X
        dex
        stx SPRITE0X
        cpx #134
        beq sprite1
        cpx #110
        beq sprite2
        cpx #86
        beq sprite3
        cpx #62
        beq sprite4
        cpx #38
        beq sprite5
        cpx #20
        beq sprite_stop
        rts
sprite1:        
        ldx #134        
        stx SPRITE0X
        lda SPRITEDOUBLEWIDTH        
        ora #%00100010
        sta SPRITEDOUBLEWIDTH
        lda #134
        sta SPRITE1X
        lda #182
        sta SPRITE5X
        rts
sprite2:
        ldx #110
        stx SPRITE2X
        ldx #230
        stx SPRITE6X
        rts
sprite3:        
        ldx #86        
        stx SPRITE2X
        lda SPRITEDOUBLEWIDTH
        ora #%01000100
        sta SPRITEDOUBLEWIDTH
        rts
sprite4:
        ldx #62
        stx SPRITE3X
        ldx #022
        stx SPRITE7X
        rts
sprite5:
        ldx #38
        stx SPRITE3X
        lda SPRITEDOUBLEWIDTH
        ora #%10001000
        sta SPRITEDOUBLEWIDTH
        rts
sprite_stop:
; **********************
; ** stoppe Bewegung
; **********************
        lda #<sprite_set_rts_exit
        sta sprite_change_2+1
        lda #>sprite_set_rts_exit
        sta sprite_change_2+2
sprite_set_rts_exit
        rts


; **********************
spr_counter !byte 08
charpos     !byte 00

start
; **********************************************************
; ** H A U P T R O U T I N E                              **
; **********************************************************
        +SetBackgroundColor 0
        +SetBorderColor 14
        
        jsr $e544
        lda #$15        ; Kleinbuchstaben
        sta $d018
        
        jsr sprite_init ; Sprites vorbereiten
        jsr sprite_set  ; Sprites einschalten        
        
        ; register first interrupt
        sei
        lda #$7f
        sta $dc0d     ; turn off the CIA interrupts
        sta $dc0d
        and $d011     ; clear high bit of raster line
        sta $d011
        +irqEnd $72, irq1
        lda #$01                ; enable raster interrupts
        sta $d01a
        cli
forever jmp forever
        
; ************************************************
; ** IRQ Routinen                               **
; ************************************************
; ************************************************
; ** IRQ Routinen                               **
; ************************************************
irq1:
        lda #$02
        jsr delay
        +SetBorderColor 14
        +SetBackgroundColor 1
        ldx #$08
        dex
        bne *-1
        +SetBackgroundColor 0
        +irqEnd $B2, irq2
        inc $d019     ; acknowledge interrupt
        jmp $ea31
        
irq2:
        lda #$02
        jsr delay
        +SetBorderColor 14
        +SetBackgroundColor 1
        ldx #$0C
        dex
        bne *-1
        +SetBackgroundColor 6
sprite_change_2        
        jsr sprite_move ; Einblenden
        +irqEnd $70, irq1
        inc $d019     ; acknowledge interrupt
        jmp $ea31
        

!align 63,0
sprite_data
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %11111111,%11111111,%11111111
        !byte %11111111,%11111111,%11111111
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte %00000000,%00000000,%00000000
        !byte $00

